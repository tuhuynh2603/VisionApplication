// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisionApplication.Model;

#nullable disable

namespace VisionApplication.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VisionApplication.Model.CameraParameter", b =>
                {
                    b.Property<int>("cameraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dateChanged")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("exposureTime")
                        .HasColumnType("float");

                    b.Property<float>("frameRate")
                        .HasColumnType("float");

                    b.Property<float>("gain")
                        .HasColumnType("float");

                    b.Property<bool>("softwareTrigger")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("cameraID");

                    b.ToTable("cameraParameterModel");
                });

            modelBuilder.Entity("VisionApplication.Model.CategoryTeachParameter", b =>
                {
                    b.Property<int>("cameraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("L_CornerIndex")
                        .HasColumnType("int");

                    b.Property<int>("L_DeviceLocationRoiId")
                        .HasColumnType("int");

                    b.Property<int>("L_DilationMask")
                        .HasColumnType("int");

                    b.Property<bool>("L_LocationEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("L_MinHeightDevice")
                        .HasColumnType("int");

                    b.Property<double>("L_MinScore")
                        .HasColumnType("double");

                    b.Property<int>("L_MinWidthDevice")
                        .HasColumnType("int");

                    b.Property<int>("L_NumberROILocation")
                        .HasColumnType("int");

                    b.Property<int>("L_NumberSide")
                        .HasColumnType("int");

                    b.Property<int>("L_ObjectColor")
                        .HasColumnType("int");

                    b.Property<int>("L_OpeningMask")
                        .HasColumnType("int");

                    b.Property<double>("L_ScaleImageRatio")
                        .HasColumnType("double");

                    b.Property<int>("L_TemplateRoiId")
                        .HasColumnType("int");

                    b.Property<int>("L_ThresholdType")
                        .HasColumnType("int");

                    b.Property<int>("L_lowerThreshold")
                        .HasColumnType("int");

                    b.Property<int>("L_lowerThresholdInnerChip")
                        .HasColumnType("int");

                    b.Property<int>("L_upperThreshold")
                        .HasColumnType("int");

                    b.Property<int>("L_upperThresholdInnerChip")
                        .HasColumnType("int");

                    b.Property<int>("OC_DilationMask")
                        .HasColumnType("int");

                    b.Property<bool>("OC_EnableCheck")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OC_MinHeightDevice")
                        .HasColumnType("int");

                    b.Property<int>("OC_MinWidthDevice")
                        .HasColumnType("int");

                    b.Property<int>("OC_OpeningMask")
                        .HasColumnType("int");

                    b.Property<int>("OC_lowerThreshold")
                        .HasColumnType("int");

                    b.Property<int>("OC_upperThreshold")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateChanged")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("teachImage")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("templateImage")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("cameraID");

                    b.HasIndex("L_DeviceLocationRoiId");

                    b.HasIndex("L_TemplateRoiId");

                    b.ToTable("categoryTeachParametersModel");
                });

            modelBuilder.Entity("VisionApplication.Model.CategoryVisionParameter", b =>
                {
                    b.Property<int>("cameraID")
                        .HasColumnType("int");

                    b.Property<int>("areaID")
                        .HasColumnType("int");

                    b.Property<bool>("LD_AreaEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LD_DefectROILocationId")
                        .HasColumnType("int");

                    b.Property<int>("LD_DilationMask")
                        .HasColumnType("int");

                    b.Property<int>("LD_ObjectCoverPercent")
                        .HasColumnType("int");

                    b.Property<int>("LD_OpeningMask")
                        .HasColumnType("int");

                    b.Property<int>("LD_lowerThreshold")
                        .HasColumnType("int");

                    b.Property<int>("LD_upperThreshold")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateChanged")
                        .HasColumnType("datetime(6)");

                    b.HasKey("cameraID", "areaID");

                    b.HasIndex("LD_DefectROILocationId");

                    b.ToTable("categoryVisionParametersModel");
                });

            modelBuilder.Entity("VisionApplication.Model.RectanglesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Angle")
                        .HasColumnType("double");

                    b.Property<double>("Height")
                        .HasColumnType("double");

                    b.Property<double>("Width")
                        .HasColumnType("double");

                    b.Property<double>("left")
                        .HasColumnType("double");

                    b.Property<double>("top")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Rectangles ROI");
                });

            modelBuilder.Entity("VisionApplication.Model.CategoryTeachParameter", b =>
                {
                    b.HasOne("VisionApplication.Model.RectanglesModel", "L_DeviceLocationRoi")
                        .WithMany()
                        .HasForeignKey("L_DeviceLocationRoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisionApplication.Model.RectanglesModel", "L_TemplateRoi")
                        .WithMany()
                        .HasForeignKey("L_TemplateRoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("L_DeviceLocationRoi");

                    b.Navigation("L_TemplateRoi");
                });

            modelBuilder.Entity("VisionApplication.Model.CategoryVisionParameter", b =>
                {
                    b.HasOne("VisionApplication.Model.RectanglesModel", "LD_DefectROILocation")
                        .WithMany()
                        .HasForeignKey("LD_DefectROILocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisionApplication.Model.CategoryTeachParameter", "teachParam")
                        .WithMany("listVisionParam")
                        .HasForeignKey("cameraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LD_DefectROILocation");

                    b.Navigation("teachParam");
                });

            modelBuilder.Entity("VisionApplication.Model.CategoryTeachParameter", b =>
                {
                    b.Navigation("listVisionParam");
                });
#pragma warning restore 612, 618
        }
    }
}
