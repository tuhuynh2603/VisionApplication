<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Grid x:Key="runSequenceImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <!--<RowDefinition Height="1*"></RowDefinition>-->
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\StartButton.png"></Image>
        <!--<TextBlock Grid.Row="1" Text="Run" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>-->
    </Grid>

    <Grid x:Key="debugSequenceImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\chevron-triple-down-custom.png"></Image>
        <TextBlock Grid.Row="1" Text="Step Run" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>
    </Grid>

    <Grid x:Key="debugSequencePreviousStepImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\step-forward-custom.png"></Image>
        <TextBlock Grid.Row="1" Text="Back" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>
    </Grid>

    <Grid x:Key="debugSequenceNextStepImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\step-forward-custom.png"></Image>
        <TextBlock Grid.Row="1" Text="Next" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>
    </Grid>

    <Grid x:Key="ImidiateStopImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <!--<RowDefinition Height="1*"></RowDefinition>-->
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\StopButton.png"></Image>
        <!--<TextBlock Grid.Row="1" Text="Imidiate Stop" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>-->
    </Grid>



    <Grid x:Key="SimulateSequence" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\NextButton_2.png"></Image>
        <TextBlock Grid.Row="1" Text="Robot" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>
    </Grid>


    <Grid x:Key="SimulateSequence2" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\NextButton_2.png"></Image>
        <TextBlock Grid.Row="1" Text="BarCode" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>
    </Grid>


    <Grid x:Key="EmergencyStopImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <!--<RowDefinition Height="1*"></RowDefinition>-->
        </Grid.RowDefinitions>
        <Image Margin="2" Grid.Row="0"  Source="..\..\Resources\EmergencyButton.png"></Image>
        <!--<TextBlock Grid.Row="1" Text="Emergency Stop" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>-->
    </Grid>

    <Grid x:Key="ResetImage" Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Image Grid.Row="0"  Source="..\..\Resources\ResetButton.png"></Image>
        <TextBlock Grid.Row="1" Text="Reset" Foreground="Yellow" TextAlignment="Center" FontSize="20"></TextBlock>
    </Grid>



    <!--Background button-->
    <LinearGradientBrush x:Key="BgButton" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF03D4F2" Offset="0.439"/>
        <GradientStop Color="#FF17717E" Offset="0.808"/>
    </LinearGradientBrush>
    <!--Open Dialog Settings-->
    <Storyboard x:Key="sb_OpenDialogUC">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grd_Dialog_Settings">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="{Binding Path=DialogUCHeight,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!--Close Dialog Settings-->
    <Storyboard x:Key="sb_CloseDialogUC">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grd_Dialog_Settings">
            <EasingDoubleKeyFrame KeyTime="0" Value="{Binding Path=DialogUCHeight,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="MouseOverButtonStyle" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF03D4F2" Offset="0.439"/>
        <GradientStop Color="#FF17717E" Offset="0.808"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckedButtonStyle" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF03D4F2" Offset="0.439"/>
        <GradientStop Color="#FF17717E" Offset="0.808"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF322F2E"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FF0073B9"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF9F9F9F"/>

    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="IsChecked" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                         BorderBrush="AliceBlue" 
                         Background="DarkSlateGray"
                         CornerRadius="0"
                         BorderThickness="0" 
                         SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                       Focusable="False" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}" 
                                       RecognizesAccessKey="True" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MouseOverButtonStyle}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CheckedButtonStyle}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                 Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                 Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground"
                                 TargetName="contentPresenter"
                                 Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle2" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsChecked" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                         BorderBrush="AliceBlue" 
                         Background="#FF322F2E"
                         CornerRadius="0"
                         BorderThickness="0" 
                         SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                       Focusable="False" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}" 
                                       RecognizesAccessKey="True" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MouseOverButtonStyle}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CheckedButtonStyle}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                 Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                 Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground"
                                 TargetName="contentPresenter"
                                 Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="LightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF03D4F2" Offset="0.439"/>
            <GradientStop Color="#FF17717E" Offset="0.808"/>
            <!--<GradientStop Offset="0.4" Color="LightGoldenrodYellow"/>
         <GradientStop Offset="0.6" Color="BurlyWood"/>-->
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!-- TabItem Style-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="Border1" BorderBrush="#FF0073B9" CornerRadius="5,5,0,0" >
                            <ContentPresenter
                         ContentSource="Header"
                         Margin="10,2,10,2"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border1" Property="Margin" Value="0,5,0,0"/>
                            <Setter TargetName="Border1" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border1" Property="Background" Value="SteelBlue" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border1" Property="Margin" Value="-5,0,-5,0"/>
                            <Setter TargetName="Border1" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="Border1" Property="Background" Value="{StaticResource LightBackgroundBrush}" />
                            <Setter Property="Panel.ZIndex" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>